# This configuration is intended for development purpose
version: "3.8"

services:
  loki:
    container_name: loki
    image: grafana/loki:2.9.10
    command: "-config.file=/etc/loki/config.yaml"
    networks:
      - monitoring
    ports:
      - 3100:3100
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - loki:/loki
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 5

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    networks:
      - monitoring
    command: "-config.file=/etc/tempo.yml"
    ports:
      - 3200:3200     # Tempo
      - 4317:4317     # OTLP
      - 9411:9411     # Zipkin
    volumes:
      - ./tempo/config.yml:/etc/tempo.yml
      - tempo:/var/lib/tempo
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3200"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.54.1
    networks:
      - monitoring
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    container_name: grafana
    image: grafana/grafana:9.1.6
    networks:
      - monitoring
    ports:
      - 3000:3000
    depends_on:
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  monitoring:
    driver: "bridge"

volumes:
  loki:
  tempo:
  prometheus:
  grafana:
